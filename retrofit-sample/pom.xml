<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <parent>
        <groupId>com.example</groupId>
        <artifactId>retrofit</artifactId>
        <version>0.0.1</version>
    </parent>

    <artifactId>retrofit-sample</artifactId>
    <version>0.0.1</version>

    <name>retrofit-sample</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.lianjiatech</groupId>
            <artifactId>retrofit-spring-boot-starter</artifactId>

            <!--          <version>2.2.3</version>-->

            <!--2.2.5版本变化比较大，尤其配置文件，请注意查看配置说明-->
            <!--          <version>2.2.5</version>-->

            <!--2.2.10版本 代码优化 支持基础类型(`String`/`Long`/`Integer`/`Boolean`/`Float`/`Double`)作为接口返回值 -->

            <!--2.2.11版本 全局超时时间配置，以及代码的优化-->
            <!--           <version>2.2.11</version>-->

            <!--2.2.12版本 封装原 retrofit 中的patch注解，支持@Patch 使用 -->
            <!--           <version>2.2.12</version>-->

            <!--2.2.16版本 默认关闭全局请求重试 -->
            <!--                        <version>2.2.16</version>-->

            <!--2.2.17版本 @RetrofitClient去掉@service注解 修复在Apollo配置系统中出现的问题 -->
            <!--           <version>2.2.17</version>          -->

            <!-- 2.2.18版本  优化熔断降级调用  之前策略为有降级异常出现且必须有熔断接口时才会执行，非常不优雅，此次修改为 有降级异常时检测是否有熔断接口，有的话启用降级策略，没有则忽略-->
<!--            catch (Throwable e) {-->
<!--                    Throwable cause = e.getCause();-->
<!--    -                Object fallbackObject = getFallbackObject(cause);-->
<!--                    // 熔断逻辑-->
<!--    -                if (cause instanceof RetrofitBlockException && degradeProperty.isEnable() && fallbackObject != null) {-->
<!--    -                    return method.invoke(fallbackObject, args);-->
<!--    +                        if (cause instanceof RetrofitBlockException && degradeProperty.isEnable()) {-->
<!--    +                             Object fallbackObject = getFallbackObject(cause);-->
<!--    +                             if (fallbackObject != null) {-->
<!--    +                                     return method.invoke(fallbackObject, args);-->
<!--    +                             }-->
<!--                            }-->
<!--                         throw cause;-->
<!--                     }-->
<!--          2.2.19版本  在开启全局重试时，支持通过@Retry(enable = false)手动关闭指定接口重试功能。-->
<!--          2.2.20版本  自定义重试拦截器支持Spring Bean形式-->
<!--          2.2.21版本 依赖升级，修复jackson和spring-security-crypto漏洞-->
            <version>2.3.2</version>

        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>3.14.9</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>3.14.9</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okio</groupId>
            <artifactId>okio</artifactId>
            <version>1.17.5</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>retrofit</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-jackson</artifactId>
            <version>2.9.0</version>
        </dependency>

        <!--springcloud环境下请启用该maven坐标，此时可以忽略接口上的degrade注解 -->
        <!--      <dependency>-->
        <!--          <groupId>com.alibaba.cloud</groupId>-->
        <!--          <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>-->
        <!--          <version>2.2.3.RELEASE</version>-->
        <!--      </dependency>-->


        <!--普通降级，请启用该maven坐标，请请求接口上加入@Dgrade注解-->
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-core</artifactId>
            <version>1.6.3</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
